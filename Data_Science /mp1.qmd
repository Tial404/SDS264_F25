---
title: "Tial's Mini Project 1"
format: pdf
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: FALSE

library(tidyverse)
library(tidytext)
library(textdata)
library(wordcloud)
library(wordcloud2)
library(dplyr)
library(viridis)
library(ggthemes)
library(gutenbergr)
```

## "The Metamorphosis" from Kaggle :

```{r}
Metamorphosis <- 
  read.table("/Users/a209112/Downloads/datasets/metamorphosis_clean.txt", header = FALSE, sep = "\t", fill = TRUE) |>

rename (text = "V1")  
```

Tokenize :
```{r}
metamorph_tidy <- as_tibble(Metamorphosis) |>
  mutate(line = row_number()) |>
  unnest_tokens(word, text, token = "words")   

metamorph_tidy   

Metamorphosis |> slice_tail(n = 10)
metamorph_tidy |> slice_tail(n = 20)
```

## Different str_ functions : 

1.Finding words that start with "mon-"
```{r}
str_view(metamorph_tidy$word,"^mon")
```

2. Counting how many constants are in each word
```{r}
metamorph_tidy |>
  select(word) |>
  mutate(n_vowels = str_count(word, "[^aeiou$]")) 
```

3. Detecting how often the word "family" comes up 
```{r}
metamorph_tidy |>
  mutate(index = line%/%10, text_to_lower = str_to_lower(word)) |>
  filter(str_detect(text_to_lower, "family")) |>
  select(index, text_to_lower) 
```

## Regular Expression : 

1.Counting how many words are in each line of text (top 5)
```{r}
Metamorphosis |>
  mutate(num_words = str_count(text, "\\b[A-Za-z'\\$]+\\b")) |>
  select(num_words) |>
  slice_max(order_by = num_words, n = 5)
```

2.Highlighting words where the 3rd and 2nd characters appear again later in the word 
```{r}
str_view(metamorph_tidy$word, "(.)(.)(.).*\\3\\2")
```

3.Extracting the first word from each line of text (top 5)
```{r}
Metamorphosis |>
  mutate(first_word = str_extract(text,"\\b[^ ]+\\b")) |>
  select(first_word)|>
  slice_head(n = 5)
```

## Text Analysis Application :
1.Counting the numbers of positive and negative sentiments 
```{r}
get_sentiments(lexicon = "afinn")
get_sentiments(lexicon = "nrc")
get_sentiments(lexicon = "bing")

sentiments <- get_sentiments(lexicon = "bing")


metamorph_tidy |>   
  inner_join(sentiments) |>
  count(sentiment)
```

2.Wordcloud for "The Metamorphosis" short novel
```{r}
words <- metamorph_tidy |>
  anti_join(stop_words) |>
  count(word) |>
  filter(word != "NA") |>
  arrange(desc(n))

wordcloud(
  words = words$word, 
  freq = words$n, 
  max.words = 100, 
  random.order = FALSE
)

```


## Illustration 
1.Horizontal bar chart to visualize word that contribute the most to sentiment scores 
```{r, echo = FALSE, fig.cap = "Figure 1. This chart lists the frequency of words that influence the sentiment scores. It highlights how, despite there being more vocabulary with negative connotations, the higher frequency of the words with positive connotations makes it balanced."}

metamorph_tidy |>
  inner_join(sentiments) |>
  count(sentiment, word, sort = TRUE) |>
  group_by(sentiment) |>
  slice_max(n, n = 10) |>
  ungroup() |>
  
ggplot(aes(x = fct_reorder(word, n), y = n, fill = sentiment)) +
    geom_col() +  
    coord_flip() +
    facet_wrap(~ sentiment, scales = "free") +
  
labs(title = 'Words influencing sentiment scores', x = 'Words', y = 'Total' ) +
  scale_fill_viridis_d(option = "plasma") + 
  theme_minimal()
```

2.Chart looking at the positive/negative sentiment trajectory over the short novel
```{r,echo = FALSE, fig.cap = "Figure 2. This sentiment trajectory shows how the novel has a balanced mix of positive and negative sentiment. The X-axis labelled 'index' is the result of approximating a chapter from every 10 lines. This highlights how the emotional tone of the novel stays relatively consistent throughout. "}
metamorph_tidy |>
  inner_join(sentiments) |>
  count(index = line%/%10, sentiment) |>
  pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) |>
mutate(sentiment = positive - negative) |>
  
ggplot(aes(x = index, y = sentiment)) +
  geom_col(show.legend = FALSE) +
  theme_minimal()
```

3.Most common words

```{r}
get_stopwords() |> print(n = 20)  
get_stopwords(source = "smart") |> print(n = 20)   
smart_stopwords <- get_stopwords(source = "smart")
```

```{r, echo = FALSE, fig.cap = "Figure 3.This figure shows that the name 'Gregory' is the most frequently used word, followed by 'room,' 'Gregor's,' 'sister,' and 'father.' This highlights how this short novel is centered around the protagonist and his relationship with his family.", fig.alt =  "This is a horizontal bar chart depicting the most common words in the short novel, 'The Metamorphosis,' by Franz Kafka. The Y-axis ranges from 0 to 200, and it lists the total number of times a word is used. The X-axis is set in an ascending order of how frequently certain words are used. According to this figure, the protagonist's name, 'Gregor,' is used most frequently, followed by 'room,' 'Gregor's,' 'sister,' and 'father." }

metamorph_tidy |>
  anti_join(smart_stopwords) |>
  count(word, sort = TRUE) |>
  filter(word != "NA") |>
  slice_max(n, n = 20) |>
  
  ggplot(aes(fct_reorder(word, n), n,fill = word)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  labs(title = 'Most common words', x = 'Words', y = 'Total' ) +
  scale_fill_viridis_d(option = "plasma") + 
  theme_minimal()
```

## Insight : 

The short novel "The Metamorphosis" by Franz Kafka seems to be centered around the main protagonist named "Gregory" and his relationship with his family (Fig.3 & wordcloud). The setting takes place in Gregory's home, specifically his room, where he lies in bed due to tiredness and experiencing pain (Fig.1). Despite how the overall emotional tone of the novel is neutral (Fig. 2), it could imply inner conflict or complex feelings. This assumption is based on how there are more words with negative connotations than positive connotations, despite it being balanced by the higher frequency of the words with positive sentiments (Fig.1).
